# This is a basic workflow to help you get started with Actions

name: "Django CI/CD: Build and test"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]

  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: 'Create env file'
        run: |
          touch .env
          ls -A
          echo POSTGRES_DB="${{ vars.POSTGRES_DB }}" >> .env
          echo POSTGRES_USER="${{ vars.POSTGRES_USER }}" >> .env
          echo POSTGRES_HOST="${{ vars.POSTGRES_HOST }}" >> .env
          echo DJANGO_DEBUG="${{ vars.DJANGO_DEBUG }}" >> .env
          echo PORT="${{ vars.GUNICORN_PORT }}" >> .env
          echo DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env

      # Runs a single command using the runners shell
      - name: Run a makemigrations script
        run: docker-compose -f docker-compose.yml run web python company/manage.py makemigrations

      # Runs a single command using the runners shell
      - name: Run a migrate script
        run: docker-compose -f docker-compose.yml run web python company/manage.py migrate

      # Runs a single command using the runners shell
      - name: Run a test script for main app
        run: docker-compose -f docker-compose.yml run web python company/manage.py test main.tests

      # Runs a single command using the runners shell
      - name: Run a test script for services app
        run: docker-compose -f docker-compose.yml run web python company/manage.py test services.tests

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2

  automerge:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set Git config
        run: |
          git config --global user.email "<>"
          git config --global user.name "Github Actions"

      - name: Clone the repository
        run: |
          git clone "https://$GITHUB_ACTOR:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/KolomarenkoDmytrii/cicd_webapp_labs.git"

      - name: Merge develop branch with main branch
        run: |
          cd cicd_webapp_labs
          git checkout main
          git merge origin/develop -m "Auto-merge develop to main"
          git push origin main
